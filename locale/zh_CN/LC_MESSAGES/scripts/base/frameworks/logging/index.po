# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, The Zeek Project
# This file is distributed under the same license as the Zeek package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Zeek source\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-28 21:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../scripts/base/frameworks/logging/index.rst:4
msgid "Package: base/frameworks/logging"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:6
msgid ""
"The logging framework provides a flexible key-value based logging "
"interface."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:8
msgid ":doc:`/scripts/base/frameworks/logging/__load__.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:11
msgid ":doc:`/scripts/base/frameworks/logging/main.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:13
msgid "The Zeek logging interface."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:15
msgid ""
"See :doc:`/frameworks/logging` for an introduction to Zeek's logging "
"framework."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:18
msgid ":doc:`/scripts/base/frameworks/logging/postprocessors/__load__.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:21
msgid ":doc:`/scripts/base/frameworks/logging/postprocessors/scp.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:23
msgid ""
"This script defines a postprocessing function that can be applied to a "
"logging filter in order to automatically SCP (secure copy) a log stream "
"(or a subset of it) to a remote host at configurable rotation time "
"intervals.  Generally, to use this functionality you must handle the "
":zeek:id:`zeek_init` event and do the following in your handler:"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:30
msgid ""
"Create a new :zeek:type:`Log::Filter` record that defines a name/path, "
"rotation interval, and set the ``postprocessor`` to "
":zeek:id:`Log::scp_postprocessor`."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:33
#: ../../scripts/base/frameworks/logging/index.rst:50
msgid "Add the filter to a logging stream using :zeek:id:`Log::add_filter`."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:34
msgid ""
"Add a table entry to :zeek:id:`Log::scp_destinations` for the filter's "
"writer/path pair which defines a set of :zeek:type:`Log::SCPDestination` "
"records."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:38
msgid ":doc:`/scripts/base/frameworks/logging/postprocessors/sftp.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:40
msgid ""
"This script defines a postprocessing function that can be applied to a "
"logging filter in order to automatically SFTP a log stream (or a subset "
"of it) to a remote host at configurable rotation time intervals.  "
"Generally, to use this functionality you must handle the "
":zeek:id:`zeek_init` event and do the following in your handler:"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:47
msgid ""
"Create a new :zeek:type:`Log::Filter` record that defines a name/path, "
"rotation interval, and set the ``postprocessor`` to "
":zeek:id:`Log::sftp_postprocessor`."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:51
msgid ""
"Add a table entry to :zeek:id:`Log::sftp_destinations` for the filter's "
"writer/path pair which defines a set of :zeek:type:`Log::SFTPDestination`"
" records."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:55
msgid ":doc:`/scripts/base/frameworks/logging/writers/ascii.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:57
msgid ""
"Interface for the ASCII log writer.  Redefinable options are available to"
" tweak the output format of ASCII logs."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:60
msgid ""
"The ASCII writer currently supports one writer-specific per-filter config"
" option: setting ``tsv`` to the string ``T`` turns the output into \"tab-"
"separated-value\" mode where only a single header row with the column "
"names is printed out as meta information, with no \"# fields\" prepended;"
" no other meta data gets included in that mode.  Example filter using "
"this::"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:71
msgid ":doc:`/scripts/base/frameworks/logging/writers/sqlite.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:73
msgid ""
"Interface for the SQLite log writer. Redefinable options are available to"
" tweak the output format of the SQLite reader."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:76
msgid ""
"See :doc:`/frameworks/logging-input-sqlite` for an introduction on how to"
" use the SQLite log writer."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:79
msgid ""
"The SQL writer currently supports one writer-specific filter option via "
"``config``: setting ``tablename`` sets the name of the table that is used"
" or created in the SQLite database. An example for this is given in the "
"introduction mentioned above."
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:84
msgid ":doc:`/scripts/base/frameworks/logging/writers/none.zeek`"
msgstr ""

#: ../../scripts/base/frameworks/logging/index.rst:86
msgid "Interface for the None log writer. This writer is mainly for debugging."
msgstr ""

